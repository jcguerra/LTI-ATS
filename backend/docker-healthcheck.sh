#!/bin/bash

# Script para verificar el estado de los servicios Docker del backend LTI ATS

echo "üîç Verificando servicios Docker del LTI ATS Backend..."
echo "=================================================="

# Verificar que Docker est√© corriendo
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker no est√° corriendo. Por favor, inicia Docker Desktop."
    exit 1
fi

echo "‚úÖ Docker est√° corriendo"

# Verificar servicios de desarrollo
echo ""
echo "üìä Estado de servicios de desarrollo:"
echo "------------------------------------"

services=("lti-ats-api-dev" "lti-ats-db-dev" "lti-ats-pgadmin-dev" "lti-ats-mailpit-dev")
for service in "${services[@]}"; do
    if docker ps --format "table {{.Names}}" | grep -q "^$service$"; then
        status=$(docker ps --filter "name=$service" --format "{{.Status}}")
        echo "‚úÖ $service: $status"
    else
        echo "‚ùå $service: No est√° corriendo"
    fi
done

echo ""
echo "üåê URLs disponibles (desarrollo):"
echo "---------------------------------"
echo "‚Ä¢ API Backend:     http://localhost:3000"
echo "‚Ä¢ Health Check:    http://localhost:3000/health"
echo "‚Ä¢ pgAdmin:         http://localhost:8080"
echo "‚Ä¢ MailPit:         http://localhost:8025"

echo ""
echo "üí° Comandos √∫tiles:"
echo "------------------"
echo "‚Ä¢ Iniciar desarrollo: npm run docker:dev:build"
echo "‚Ä¢ Ver logs:          npm run docker:dev:logs"
echo "‚Ä¢ Detener:           npm run docker:dev:down"

echo ""
echo "üîó Para probar la API, ejecuta:"
echo "curl http://localhost:3000/health"

echo ""
echo "==================================================" 